create table "public"."x_users" (
    "id" bigint generated by default as identity not null,
    "account_name" text not null,
    "account_id" character varying not null,
    "is_active" boolean not null default false,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."x_users" enable row level security;

create table "public"."x_users_mentions" (
    "id" bigint generated by default as identity not null,
    "account_id" character varying not null,
    "tweet_id" character varying not null,
    "tweet_content" character varying not null,
    "tweeted_at" timestamp with time zone not null,
    "is_responded" boolean not null default false
);


alter table "public"."x_users_mentions" enable row level security;

CREATE UNIQUE INDEX x_users_account_id_key ON public.x_users USING btree (account_id);

CREATE UNIQUE INDEX x_users_account_name_key ON public.x_users USING btree (account_name);

CREATE UNIQUE INDEX x_users_mentions_pkey ON public.x_users_mentions USING btree (id);

CREATE UNIQUE INDEX x_users_pkey ON public.x_users USING btree (id);

alter table "public"."x_users" add constraint "x_users_pkey" PRIMARY KEY using index "x_users_pkey";

alter table "public"."x_users_mentions" add constraint "x_users_mentions_pkey" PRIMARY KEY using index "x_users_mentions_pkey";

alter table "public"."x_users" add constraint "x_users_account_id_key" UNIQUE using index "x_users_account_id_key";

alter table "public"."x_users" add constraint "x_users_account_name_key" UNIQUE using index "x_users_account_name_key";

alter table "public"."x_users_mentions" add constraint "x_users_mentions_account_id_fkey" FOREIGN KEY (account_id) REFERENCES x_users(account_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."x_users_mentions" validate constraint "x_users_mentions_account_id_fkey";

grant delete on table "public"."x_users" to "anon";

grant insert on table "public"."x_users" to "anon";

grant references on table "public"."x_users" to "anon";

grant select on table "public"."x_users" to "anon";

grant trigger on table "public"."x_users" to "anon";

grant truncate on table "public"."x_users" to "anon";

grant update on table "public"."x_users" to "anon";

grant delete on table "public"."x_users" to "authenticated";

grant insert on table "public"."x_users" to "authenticated";

grant references on table "public"."x_users" to "authenticated";

grant select on table "public"."x_users" to "authenticated";

grant trigger on table "public"."x_users" to "authenticated";

grant truncate on table "public"."x_users" to "authenticated";

grant update on table "public"."x_users" to "authenticated";

grant delete on table "public"."x_users" to "service_role";

grant insert on table "public"."x_users" to "service_role";

grant references on table "public"."x_users" to "service_role";

grant select on table "public"."x_users" to "service_role";

grant trigger on table "public"."x_users" to "service_role";

grant truncate on table "public"."x_users" to "service_role";

grant update on table "public"."x_users" to "service_role";

grant delete on table "public"."x_users_mentions" to "anon";

grant insert on table "public"."x_users_mentions" to "anon";

grant references on table "public"."x_users_mentions" to "anon";

grant select on table "public"."x_users_mentions" to "anon";

grant trigger on table "public"."x_users_mentions" to "anon";

grant truncate on table "public"."x_users_mentions" to "anon";

grant update on table "public"."x_users_mentions" to "anon";

grant delete on table "public"."x_users_mentions" to "authenticated";

grant insert on table "public"."x_users_mentions" to "authenticated";

grant references on table "public"."x_users_mentions" to "authenticated";

grant select on table "public"."x_users_mentions" to "authenticated";

grant trigger on table "public"."x_users_mentions" to "authenticated";

grant truncate on table "public"."x_users_mentions" to "authenticated";

grant update on table "public"."x_users_mentions" to "authenticated";

grant delete on table "public"."x_users_mentions" to "service_role";

grant insert on table "public"."x_users_mentions" to "service_role";

grant references on table "public"."x_users_mentions" to "service_role";

grant select on table "public"."x_users_mentions" to "service_role";

grant trigger on table "public"."x_users_mentions" to "service_role";

grant truncate on table "public"."x_users_mentions" to "service_role";

grant update on table "public"."x_users_mentions" to "service_role";


